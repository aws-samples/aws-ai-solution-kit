{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"AI \u200b\u200bSolution Kit provides a series of machine learning functions based on deep learning, such as text recognition, natural language understanding, face detection, and image understanding. You can easily use out-of-the-box AI features by calling APIs, while seamlessly integrating with other services provided by AWS. APIs The solution automatically creates RESTful APIs through Amazon API Gateway. After deploying the solution , you can send HTTP POST requests to use the AI features. The table below lists the supported APIs. You can click the Details link to view the test method and sample code of each API interface. For more information, see API Reference Guide . Optical Character Recognition (OCR) API Name Description API General OCR (Simplified Chinese) Recognize and extract Simplified Chinese, numbers, alphabetical characters and symbols. Return the information such as text or coordinates. Details General OCR (Traditional Chinese) Recognize and extract Traditional Chinese, numbers, alphabetical characters and symbols from images. Return the information such as text or coordinates. Details Custom OCR You can customize the OCR template, extract the structured text information in cards and tickets, and display the results in the key-value format. Details Car License Plate Recognize text on Chinese car license plate. Details Face and Body API Name Description API Face Detection Detect the face in an image, and map the detected facial features and contour key point information to 64 vector coordinates. Details Face Comparison Compare two faces of the same person and return a confidence score of the similarity. Details Human Attribute Recognition Recognize the attributes of the human body in the image, and return the human body position coordinates and attribute analysis in each area, including the semantic information of 16 attributes such as gender, age, and clothing. Details Human Image Segmentation Segment human bodies from background and return the alpha channel which is a color component representing the degree of transparency of a color. Details Image Understanding API Name Description API Image Similarity Compare two images by calculating the cosine distance from the image feature vector and converting it into confidence, and return similarity score. Details Object Recognition Recognize objects in the image and return the region information and confidence score for each object. 300 types of objects are supported. Details Pornography Detection Detect pornographic image in three dimensions (normal, sexy, porn) and return confidence scores. Details Vision Production API Name Description API Image Super Resolution Upscale the resolution and enhance details in the images. Details Natural Language Understanding (NLU) API Name Description API Text Similarity Compare two Chinese words or sentences and return similarity score. Details This implementation guide describes architectural considerations and configuration steps for deploying AI Solution Kit in the AWS cloud. It includes links to CloudFormation templates that launches and configures the AWS services required to deploy this solution using AWS best practices for security and availability. The guide is intended for IT architects, developers, DevOps, data engineers with practical experience architecting in the AWS Cloud.","title":"Welcome"},{"location":"#apis","text":"The solution automatically creates RESTful APIs through Amazon API Gateway. After deploying the solution , you can send HTTP POST requests to use the AI features. The table below lists the supported APIs. You can click the Details link to view the test method and sample code of each API interface. For more information, see API Reference Guide .","title":"APIs"},{"location":"#optical-character-recognition-ocr","text":"API Name Description API General OCR (Simplified Chinese) Recognize and extract Simplified Chinese, numbers, alphabetical characters and symbols. Return the information such as text or coordinates. Details General OCR (Traditional Chinese) Recognize and extract Traditional Chinese, numbers, alphabetical characters and symbols from images. Return the information such as text or coordinates. Details Custom OCR You can customize the OCR template, extract the structured text information in cards and tickets, and display the results in the key-value format. Details Car License Plate Recognize text on Chinese car license plate. Details","title":"Optical Character Recognition (OCR)"},{"location":"#face-and-body","text":"API Name Description API Face Detection Detect the face in an image, and map the detected facial features and contour key point information to 64 vector coordinates. Details Face Comparison Compare two faces of the same person and return a confidence score of the similarity. Details Human Attribute Recognition Recognize the attributes of the human body in the image, and return the human body position coordinates and attribute analysis in each area, including the semantic information of 16 attributes such as gender, age, and clothing. Details Human Image Segmentation Segment human bodies from background and return the alpha channel which is a color component representing the degree of transparency of a color. Details","title":"Face and Body"},{"location":"#image-understanding","text":"API Name Description API Image Similarity Compare two images by calculating the cosine distance from the image feature vector and converting it into confidence, and return similarity score. Details Object Recognition Recognize objects in the image and return the region information and confidence score for each object. 300 types of objects are supported. Details Pornography Detection Detect pornographic image in three dimensions (normal, sexy, porn) and return confidence scores. Details","title":"Image Understanding"},{"location":"#vision-production","text":"API Name Description API Image Super Resolution Upscale the resolution and enhance details in the images. Details","title":"Vision Production"},{"location":"#natural-language-understanding-nlu","text":"API Name Description API Text Similarity Compare two Chinese words or sentences and return similarity score. Details This implementation guide describes architectural considerations and configuration steps for deploying AI Solution Kit in the AWS cloud. It includes links to CloudFormation templates that launches and configures the AWS services required to deploy this solution using AWS best practices for security and availability. The guide is intended for IT architects, developers, DevOps, data engineers with practical experience architecting in the AWS Cloud.","title":"Natural Language Understanding (NLU)"},{"location":"additional-resources/","text":"AWS Lambda Amazon SageMaker Amazon API Gateway Amazon ECR Amazon EFS AWS IAM Amazon EC2 AWS CloudFormation Amazon S3","title":"Additional resources"},{"location":"api-explorer/","text":"You can call the following APIs to use the corresponding AI features. General OCR (Simplified Chinese) General OCR (Traditional Chinese) Custom OCR Car License Plate Face Detection Face Comparison Human Attribute Recognition Human Image Segmentation Image Similarity Object Recognition Pornography Detection Image Super Resolution Text Similarity Calling URL You have two options to call URL of AI features: When deploying the solution, set the parameter APIGatewayAuthorization to NONE to allow anonymous access to API. When deploying the solution, set the parameter APIGatewayAuthorization to AWS_IAM to use the IAM permission to control access to API. For more information, see Invoking a REST API in Amazon API Gateway . Tools API Explorer Postman cURL Python Java","title":"Overview"},{"location":"api-explorer/#calling-url","text":"You have two options to call URL of AI features: When deploying the solution, set the parameter APIGatewayAuthorization to NONE to allow anonymous access to API. When deploying the solution, set the parameter APIGatewayAuthorization to AWS_IAM to use the IAM permission to control access to API. For more information, see Invoking a REST API in Amazon API Gateway .","title":"Calling URL"},{"location":"api-explorer/#tools","text":"API Explorer Postman cURL Python Java","title":"Tools"},{"location":"architecture/","text":"This solution architecture has two types of AI feature implementations: architecture based on AWS Lambda and architecture based on Amazon SageMaker. Note The architecture based on Amazon SageMaker is only applicable to Image Super Resolution Solution . Architecture based on AWS Lambda The user or application sends an API request to the Amazon API Gateway. The request payload needs to contain information about the image or text to be processed. Amazon API Gateway sends the incoming user request directly to the AWS Lambda function. The AWS Lambda function returns the result to the invoker. Architecture based on Amazon SageMaker The user or application sends an API request to the Amazon API Gateway. The request payload needs to contain the image or text information to be processed. Amazon API Gateway sends the request to AWS Lambda (invoke endpoint) function. AWS Lambda invokes Amazon SageMaker Endpoint, which performs the inference process in Amazon SageMaker and returns the inference result (usually in JSON format data).","title":"Architecture overview"},{"location":"architecture/#architecture-based-on-aws-lambda","text":"The user or application sends an API request to the Amazon API Gateway. The request payload needs to contain information about the image or text to be processed. Amazon API Gateway sends the incoming user request directly to the AWS Lambda function. The AWS Lambda function returns the result to the invoker.","title":"Architecture based on AWS Lambda"},{"location":"architecture/#architecture-based-on-amazon-sagemaker","text":"The user or application sends an API request to the Amazon API Gateway. The request payload needs to contain the image or text information to be processed. Amazon API Gateway sends the request to AWS Lambda (invoke endpoint) function. AWS Lambda invokes Amazon SageMaker Endpoint, which performs the inference process in Amazon SageMaker and returns the inference result (usually in JSON format data).","title":"Architecture based on Amazon SageMaker"},{"location":"cost/","text":"You will be responsible for the cost of using each of the AWS services when running the solution. As of June 2022, the main factors affecting the solution cost include: AWS Lambda invocations AWS Lambda running time Amazon API Gateway calls Amazon API Gateway data output Amazon CloudWatch Logs storage Amazon Elastic Container Registry storage Amazon SageMaker endpoint node instance type Amazon SageMaker endpoint node data input Amazon SageMaker endpoint node data output Note The cost incurred by Amazon SageMaker is only applicable to Image Super Resolution . You can refer to the Cost Estimation section corresponding to each API to check the deployment and actual usage cost estimation for each API feature. API Cost Estimation General OCR (Simplified Chinese) View General OCR (Traditional Chinese) View Custom OCR View Car License Plate View Face Detection View Face Comparison View Human Attribute Recognition View Human Image Segmentation View Image Similarity View Object Recognition View Pornography Detection View Image Super Resolution View Text Similarity View","title":"Cost"},{"location":"deploy-add-delete-api/","text":"Add or remove AI features You can update the AWS CloudFormation stack to add new AI features or remove the AI feature already deployed. Sign in to the AWS CloudFormation console . Select the root stack of this solution, not the nested stack. Choose Update . Select Use current template , and choose Next . Update the parameters as needed, and choose Next . For example, if you have chosen no for Custom Template OCR , you can change it to yes to add the feature. On the Configure stack options page, choose Next . On the Review page, review and confirm the settings. Check the box acknowledging that the template will create AWS Identity and Access Management (IAM) resources. Choose Update stack to update the stack.","title":"Update CloudFormation stack"},{"location":"deploy-add-delete-api/#add-or-remove-ai-features","text":"You can update the AWS CloudFormation stack to add new AI features or remove the AI feature already deployed. Sign in to the AWS CloudFormation console . Select the root stack of this solution, not the nested stack. Choose Update . Select Use current template , and choose Next . Update the parameters as needed, and choose Next . For example, if you have chosen no for Custom Template OCR , you can change it to yes to add the feature. On the Configure stack options page, choose Next . On the Review page, review and confirm the settings. Check the box acknowledging that the template will create AWS Identity and Access Management (IAM) resources. Choose Update stack to update the stack.","title":"Add or remove AI features"},{"location":"deploy-car-license-plate/","text":"Macro Syntax Error Line 56 in Markdown file: expected token 'end of statement block', got 'string' include-markdown \"include-deploy-code.md\"","title":"Car License Plate"},{"location":"deploy-car-license-plate/#macro-syntax-error","text":"Line 56 in Markdown file: expected token 'end of statement block', got 'string' include-markdown \"include-deploy-code.md\"","title":"Macro Syntax Error"},{"location":"deploy-custom-ocr/","text":"Macro Syntax Error Line 220 in Markdown file: expected token 'end of statement block', got 'string' include-markdown \"include-deploy-code.md\"","title":"Custom OCR"},{"location":"deploy-custom-ocr/#macro-syntax-error","text":"Line 220 in Markdown file: expected token 'end of statement block', got 'string' include-markdown \"include-deploy-code.md\"","title":"Macro Syntax Error"},{"location":"deploy-face-comparison/","text":"Macro Syntax Error Line 73 in Markdown file: expected token 'end of statement block', got 'string' include-markdown \"include-deploy-code.md\"","title":"Face Comparison"},{"location":"deploy-face-comparison/#macro-syntax-error","text":"Line 73 in Markdown file: expected token 'end of statement block', got 'string' include-markdown \"include-deploy-code.md\"","title":"Macro Syntax Error"},{"location":"deploy-face-detection/","text":"Macro Syntax Error Line 86 in Markdown file: expected token 'end of statement block', got 'string' include-markdown \"include-deploy-code.md\"","title":"Face Detection"},{"location":"deploy-face-detection/#macro-syntax-error","text":"Line 86 in Markdown file: expected token 'end of statement block', got 'string' include-markdown \"include-deploy-code.md\"","title":"Macro Syntax Error"},{"location":"deploy-general-ocr-traditional/","text":"Macro Syntax Error Line 66 in Markdown file: expected token 'end of statement block', got 'string' include-markdown \"include-deploy-code.md\"","title":"General OCR (Traditional Chinese)"},{"location":"deploy-general-ocr-traditional/#macro-syntax-error","text":"Line 66 in Markdown file: expected token 'end of statement block', got 'string' include-markdown \"include-deploy-code.md\"","title":"Macro Syntax Error"},{"location":"deploy-general-ocr/","text":"Macro Syntax Error Line 65 in Markdown file: expected token 'end of statement block', got 'string' include-markdown \"include-deploy-code.md\"","title":"General OCR (Simplified Chinese)"},{"location":"deploy-general-ocr/#macro-syntax-error","text":"Line 65 in Markdown file: expected token 'end of statement block', got 'string' include-markdown \"include-deploy-code.md\"","title":"Macro Syntax Error"},{"location":"deploy-human-attribute-recognition/","text":"Macro Syntax Error Line 165 in Markdown file: expected token 'end of statement block', got 'string' include-markdown \"include-deploy-code.md\"","title":"Human Attribute Recognition"},{"location":"deploy-human-attribute-recognition/#macro-syntax-error","text":"Line 165 in Markdown file: expected token 'end of statement block', got 'string' include-markdown \"include-deploy-code.md\"","title":"Macro Syntax Error"},{"location":"deploy-human-image-segmentation/","text":"Macro Syntax Error Line 48 in Markdown file: expected token 'end of statement block', got 'string' include-markdown \"include-deploy-code.md\"","title":"Human Image Segmentation"},{"location":"deploy-human-image-segmentation/#macro-syntax-error","text":"Line 48 in Markdown file: expected token 'end of statement block', got 'string' include-markdown \"include-deploy-code.md\"","title":"Macro Syntax Error"},{"location":"deploy-image-similarity/","text":"Macro Syntax Error Line 100 in Markdown file: expected token 'end of statement block', got 'string' include-markdown \"include-deploy-code.md\"","title":"Image Similarity"},{"location":"deploy-image-similarity/#macro-syntax-error","text":"Line 100 in Markdown file: expected token 'end of statement block', got 'string' include-markdown \"include-deploy-code.md\"","title":"Macro Syntax Error"},{"location":"deploy-image-super-resolution/","text":"Macro Syntax Error Line 55 in Markdown file: expected token 'end of statement block', got 'string' include-markdown \"include-deploy-code.md\"","title":"Image Super Resolution"},{"location":"deploy-image-super-resolution/#macro-syntax-error","text":"Line 55 in Markdown file: expected token 'end of statement block', got 'string' include-markdown \"include-deploy-code.md\"","title":"Macro Syntax Error"},{"location":"deploy-object-recognition/","text":"Macro Syntax Error Line 404 in Markdown file: expected token 'end of statement block', got 'string' include-markdown \"include-deploy-code.md\"","title":"Object Recognition"},{"location":"deploy-object-recognition/#macro-syntax-error","text":"Line 404 in Markdown file: expected token 'end of statement block', got 'string' include-markdown \"include-deploy-code.md\"","title":"Macro Syntax Error"},{"location":"deploy-pornography-detection/","text":"Macro Syntax Error Line 48 in Markdown file: expected token 'end of statement block', got 'string' include-markdown \"include-deploy-code.md\"","title":"Pornography Detection"},{"location":"deploy-pornography-detection/#macro-syntax-error","text":"Line 48 in Markdown file: expected token 'end of statement block', got 'string' include-markdown \"include-deploy-code.md\"","title":"Macro Syntax Error"},{"location":"deploy-text-similarity/","text":"Macro Syntax Error Line 81 in Markdown file: expected token 'end of statement block', got 'string' include-markdown \"include-deploy-code.md\"","title":"Text Similarity"},{"location":"deploy-text-similarity/#macro-syntax-error","text":"Line 81 in Markdown file: expected token 'end of statement block', got 'string' include-markdown \"include-deploy-code.md\"","title":"Macro Syntax Error"},{"location":"deployment/","text":"Before you launch the solution, review the architecture, supported regions, and other considerations discussed in this guide. Follow the step-by-step instructions in this section to configure and deploy the solution into your account. Deployment time Approximately 10 minutes for deploying an AI feature based on the Amazon Lambda architecture Approximately 20 minutes for deploying an AI feature based on the Amazon SageMaker architecture Prerequisite If you choose to launch the stack from AWS China Regions, make sure a domain registered by ICP is available. For more information, see ICP Recordal . Launch the stack Log in to the AWS Management Console and select the link to launch the AWS CloudFormation stack. Launch the stack in Global Regions Launch the stack in China Regions The template is launched in the default region after you log in to the console. To launch the solution in a different AWS Region, use the Region selector in the console navigation bar. On the Create Stack page, verify that the correct template URL is displayed in the Amazon S3 URL text box, and choose Next . On the Specify stack details page, assign a name to your solution stack. For information about naming character limitations, refer to IAM and STS Limits in the AWS Identity and Access Management User Guide . Under Parameters , modify the General Configuration and select the AI features to be deployed, and choose Next . You can choose whether to deploy API explorer, and the authentication method of the API gateway. Parameter Name Default Value Description APIExplorer yes Deploys the API Explorer to visualize and interact with API resources. See API Reference Guide for details. If you choose no , you can only view the API definitions in API explorer, but cannot perform online test. APIGatewayAuthorization NONE The authentication method of the API gateway. The default is NONE , which means no privilege authentication method. You can also choose to use the IAM permission to control access to the API. APIGatewayStageName prod The first path field in the API gateway (URI). For more information, see stageVariable . You can change the parameter for each AI feature to yes to deploy it. By default, it is no for each AI feature. Parameter ID Default Description GeneralOCR no Deploy General OCR (Simplified Chinese) GeneralOCRTraditional no Deploy General OCR (Traditional Chinese) CustomOCR no Deploy Custom OCR CarLicensePlate no Deploy Car License Plate FaceComparison no Deploy Face Comparison FaceDetection no Deploy Face Detection HumanAttributeRecognition no Deploy Human Attribute Recognition HumanImageSegmentation no Deploy Human Image Segmentation ImageSimilarity no Deploy Image Similarity ObjectRecognition no Deploy Object Recognition PornographyDetection no Deploy Pornography Detection ImageSuperResolution no Deploy Image Super Resolution TextSimilarity no Deploy Text Similarity On the Configure Stack Options page, choose Next . On the Review page, review and confirm the settings. Check the box acknowledging that the template creates AWS Identity and Access Management (IAM) resources. Choose Next . Choose Create Stack to deploy the stack. You can view the status of the stack in the Status column of the AWS CloudFormation console. You should receive a CREATE_COMPLETE status when the creation is complete. Follow-up actions After successful deployment, go to the Outputs tab in AWS CloudFormation's console to find the invoke URL based on Amazon API Gateway according to Parameter ID . Next, you can perform the following operations: Check API and test calling API. For more information, see API Reference Guide . Add or remove AI features. For more information, see Update CloudFormation stack .","title":"Launch CloudFormation stack"},{"location":"deployment/#prerequisite","text":"If you choose to launch the stack from AWS China Regions, make sure a domain registered by ICP is available. For more information, see ICP Recordal .","title":"Prerequisite"},{"location":"deployment/#launch-the-stack","text":"Log in to the AWS Management Console and select the link to launch the AWS CloudFormation stack. Launch the stack in Global Regions Launch the stack in China Regions The template is launched in the default region after you log in to the console. To launch the solution in a different AWS Region, use the Region selector in the console navigation bar. On the Create Stack page, verify that the correct template URL is displayed in the Amazon S3 URL text box, and choose Next . On the Specify stack details page, assign a name to your solution stack. For information about naming character limitations, refer to IAM and STS Limits in the AWS Identity and Access Management User Guide . Under Parameters , modify the General Configuration and select the AI features to be deployed, and choose Next . You can choose whether to deploy API explorer, and the authentication method of the API gateway. Parameter Name Default Value Description APIExplorer yes Deploys the API Explorer to visualize and interact with API resources. See API Reference Guide for details. If you choose no , you can only view the API definitions in API explorer, but cannot perform online test. APIGatewayAuthorization NONE The authentication method of the API gateway. The default is NONE , which means no privilege authentication method. You can also choose to use the IAM permission to control access to the API. APIGatewayStageName prod The first path field in the API gateway (URI). For more information, see stageVariable . You can change the parameter for each AI feature to yes to deploy it. By default, it is no for each AI feature. Parameter ID Default Description GeneralOCR no Deploy General OCR (Simplified Chinese) GeneralOCRTraditional no Deploy General OCR (Traditional Chinese) CustomOCR no Deploy Custom OCR CarLicensePlate no Deploy Car License Plate FaceComparison no Deploy Face Comparison FaceDetection no Deploy Face Detection HumanAttributeRecognition no Deploy Human Attribute Recognition HumanImageSegmentation no Deploy Human Image Segmentation ImageSimilarity no Deploy Image Similarity ObjectRecognition no Deploy Object Recognition PornographyDetection no Deploy Pornography Detection ImageSuperResolution no Deploy Image Super Resolution TextSimilarity no Deploy Text Similarity On the Configure Stack Options page, choose Next . On the Review page, review and confirm the settings. Check the box acknowledging that the template creates AWS Identity and Access Management (IAM) resources. Choose Next . Choose Create Stack to deploy the stack. You can view the status of the stack in the Status column of the AWS CloudFormation console. You should receive a CREATE_COMPLETE status when the creation is complete.","title":"Launch the stack"},{"location":"deployment/#follow-up-actions","text":"After successful deployment, go to the Outputs tab in AWS CloudFormation's console to find the invoke URL based on Amazon API Gateway according to Parameter ID . Next, you can perform the following operations: Check API and test calling API. For more information, see API Reference Guide . Add or remove AI features. For more information, see Update CloudFormation stack .","title":"Follow-up actions"},{"location":"faq/","text":"1. How to make ICP recordal when deploying the solution in AWS China Regions? This solution uses Amazon API Gateway to receive API call requests. If you want to provide API requests that can be accessed without authentication in the AWS China Regions, you need to apply for and ensure that your AWS account has been registered with the Internet Content Provider (ICP), and 80 /443 port can be enabled normally. For more information, refer to ICP Recordal . 2. When deploying the solution, I encountered The account-level service limit 'ml.g4dn.xlarge for endpoint usage' is 0 Instances . How to resolve it? This API needs to create a GPU instance based on Amazon SageMaker. If the corresponding instance limit in your AWS account is insufficient, the API feature will be deployed abnormally. You can click Support Center on the toolbar at the top of the AWS Management Console to create a support ticket to request an increase in the instance limit of the Amazon SageMaker service. For more information, see AWS service quotas . 3. When deploying the solution, I encountered Resource handler returned message: \"'MemorySize' value failed to satisfy constraint: Member must have value less than or equal to 3008 . How to resolve it? The default AWS Lambda memory is about 4GB (4096 MB). If the AWS Lambda function limit in your AWS account is lower than 4096 MB, the API feature will be deployed abnormally. You can click Support Center on the toolbar at the top of the AWS Management Console to create a support ticket and request to increase the memory limit of the AWS Lambda service. For more information, see AWS service quotas . 4. What AWS Identity and Access Management (IAM) permissions are required to deploy the solution? The following permissions are required to deploy the solution and invoke the API via API Gateway after deployment. sagemaker: is only applicable to the Image Super Resolution API. Actions apigateway:DELETE apigateway:GET apigateway:PATCH apigateway:POST apigateway:PUT cloudformation:CancelUpdateStack cloudformation:ContinueUpdateRollback cloudformation:CreateChangeSet cloudformation:CreateStack cloudformation:DeleteStack cloudformation:DescribeChangeSet cloudformation:DescribeStackEvents cloudformation:DescribeStackResources cloudformation:DescribeStackStacks cloudformation:GetStackPolicy cloudformation:GetTemplateSummary cloudformation:ListChangeSets cloudformation:ListStackResources cloudformation:ListStacks cloudformation:RollbackStack cloudformation:UpdateStack cloudformation:UpdateStackSet cloudformation:UpdateStackSet ecr:BatchDeleteImage ecr:BatchGetImage ecr:CreateRepository ecr:DeleteRepository ecr:DescribeRepositories ecr:GetDownloadUrlForLayer ecr:GetRepositoryPolicy ecr:InitiateLayerUpload ecr:PutImage ecr:SetRepositoryPolicy iam:AttachRolePolicy iam:CreateRole iam:DeleteRole iam:DeleteRolePolicy iam:DetachRolePolicy iam:GetRole iam:ListRoles iam:PassRole iam:PutRolePolicy lambda:AddPermission lambda:CreateFunction lambda:DeleteFunction lambda:GetFunction lambda:InvokeFunction lambda:RemovePermission lambda:UpdateFunctionConfiguration s3:GetObject sagemaker:CreateEndpoint sagemaker:CreateEndpointConfig sagemaker:CreateModel sagemaker:DeleteEndpoint sagemaker:DeleteEndpointConfig sagemaker:DeleteModel sagemaker:DescribeEndpoint sagemaker:DescribeEndpointConfig sagemaker:DescribeModel sagemaker:InvokeEndpoint sns:ListTopics 5. How to universally switch the way APIs are authenticated for access in Amazon API Gateway? With AWS CloudFormation, you can update the stack to change the properties of existing resources in your stack. Sign in to the AWS CloudFormation console . On the Stacks page, select the solution\u2019s root stack. On the Stack details page, choose Update . Select Use current template , and choose Next . Update the parameter API Gateway Authorization , and choose Next . On the Configure stack options page, choose Next . On the Review page, review and confirm the settings. Check the box acknowledging that the template will create AWS Identity and Access Management (IAM) resources. Choose Next . Choose Update stack to update the stack. 6. How to individually switch the way APIs are authenticated for access in Amazon API Gateway? Follow the steps below: Access Amazon API Gateway console . Select the most recently created AI Solution Kit API in the API list, and open the API details page. You can sort by Created to facilitate the search. Expand the resource tree, find the OPTIONS node under the path of the resource you need to modify the access rights, and click it to display the method execution configuration page. Click the Method Request link under Method Execution. Choose the Edit button on the right side of the authorization, expand the drop-down list, and select Amazon IAM . Choose the Update button to complete the modification. After the update, the authorization item should be displayed as 'Amazon IAM'. 6. Choose the POST button under OPTIONS in the resource tree, and modify the method of OPTIONS, change the authorization method to Amazon IAM in the method request, and then choose the Update button. Choose the Actions drop-down button on the left side of the method execution, and click on the Deploy API option under API Actions. In the Deploy API dialog box, select prod or a custom name for the deployment phase (do not select [New Phase]), and then click the Deploy button below to complete the deployment. 7. How to create and use a usage plan with API key? This solution supports API Usage Plans. After deploying the solution and testing the APIs, you can implement API Gateway Usage Plans and offer them as a customer-facing product/service. You can configure usage plans and API keys to allow customers to access selected APIs at agreed request rates and quotas that meet their business needs and budget constraints. You can set default method level limits for APIs or set limits for individual API methods if desired. The API caller must provide an assigned API key in the x-api-key header of the API request. To configure an API usage plan , refer to Configure Usage Plan .","title":"FAQ"},{"location":"faq/#1-how-to-make-icp-recordal-when-deploying-the-solution-in-aws-china-regions","text":"This solution uses Amazon API Gateway to receive API call requests. If you want to provide API requests that can be accessed without authentication in the AWS China Regions, you need to apply for and ensure that your AWS account has been registered with the Internet Content Provider (ICP), and 80 /443 port can be enabled normally. For more information, refer to ICP Recordal .","title":"1. How to make ICP recordal when deploying the solution in AWS China Regions?"},{"location":"faq/#2-when-deploying-the-solution-i-encountered-the-account-level-service-limit-mlg4dnxlarge-for-endpoint-usage-is-0-instances-how-to-resolve-it","text":"This API needs to create a GPU instance based on Amazon SageMaker. If the corresponding instance limit in your AWS account is insufficient, the API feature will be deployed abnormally. You can click Support Center on the toolbar at the top of the AWS Management Console to create a support ticket to request an increase in the instance limit of the Amazon SageMaker service. For more information, see AWS service quotas .","title":"2. When deploying the solution, I encountered The account-level service limit 'ml.g4dn.xlarge for endpoint usage' is 0 Instances. How to resolve it?"},{"location":"faq/#3-when-deploying-the-solution-i-encountered-resource-handler-returned-message-memorysize-value-failed-to-satisfy-constraint-member-must-have-value-less-than-or-equal-to-3008-how-to-resolve-it","text":"The default AWS Lambda memory is about 4GB (4096 MB). If the AWS Lambda function limit in your AWS account is lower than 4096 MB, the API feature will be deployed abnormally. You can click Support Center on the toolbar at the top of the AWS Management Console to create a support ticket and request to increase the memory limit of the AWS Lambda service. For more information, see AWS service quotas .","title":"3. When deploying the solution, I encountered Resource handler returned message: \"'MemorySize' value failed to satisfy constraint: Member must have value less than or equal to 3008. How to resolve it?"},{"location":"faq/#4-what-aws-identity-and-access-management-iam-permissions-are-required-to-deploy-the-solution","text":"The following permissions are required to deploy the solution and invoke the API via API Gateway after deployment. sagemaker: is only applicable to the Image Super Resolution API. Actions apigateway:DELETE apigateway:GET apigateway:PATCH apigateway:POST apigateway:PUT cloudformation:CancelUpdateStack cloudformation:ContinueUpdateRollback cloudformation:CreateChangeSet cloudformation:CreateStack cloudformation:DeleteStack cloudformation:DescribeChangeSet cloudformation:DescribeStackEvents cloudformation:DescribeStackResources cloudformation:DescribeStackStacks cloudformation:GetStackPolicy cloudformation:GetTemplateSummary cloudformation:ListChangeSets cloudformation:ListStackResources cloudformation:ListStacks cloudformation:RollbackStack cloudformation:UpdateStack cloudformation:UpdateStackSet cloudformation:UpdateStackSet ecr:BatchDeleteImage ecr:BatchGetImage ecr:CreateRepository ecr:DeleteRepository ecr:DescribeRepositories ecr:GetDownloadUrlForLayer ecr:GetRepositoryPolicy ecr:InitiateLayerUpload ecr:PutImage ecr:SetRepositoryPolicy iam:AttachRolePolicy iam:CreateRole iam:DeleteRole iam:DeleteRolePolicy iam:DetachRolePolicy iam:GetRole iam:ListRoles iam:PassRole iam:PutRolePolicy lambda:AddPermission lambda:CreateFunction lambda:DeleteFunction lambda:GetFunction lambda:InvokeFunction lambda:RemovePermission lambda:UpdateFunctionConfiguration s3:GetObject sagemaker:CreateEndpoint sagemaker:CreateEndpointConfig sagemaker:CreateModel sagemaker:DeleteEndpoint sagemaker:DeleteEndpointConfig sagemaker:DeleteModel sagemaker:DescribeEndpoint sagemaker:DescribeEndpointConfig sagemaker:DescribeModel sagemaker:InvokeEndpoint sns:ListTopics","title":"4. What AWS Identity and Access Management (IAM) permissions are required to deploy the solution?"},{"location":"faq/#5-how-to-universally-switch-the-way-apis-are-authenticated-for-access-in-amazon-api-gateway","text":"With AWS CloudFormation, you can update the stack to change the properties of existing resources in your stack. Sign in to the AWS CloudFormation console . On the Stacks page, select the solution\u2019s root stack. On the Stack details page, choose Update . Select Use current template , and choose Next . Update the parameter API Gateway Authorization , and choose Next . On the Configure stack options page, choose Next . On the Review page, review and confirm the settings. Check the box acknowledging that the template will create AWS Identity and Access Management (IAM) resources. Choose Next . Choose Update stack to update the stack.","title":"5. How to universally switch the way APIs are authenticated for access in Amazon API Gateway?"},{"location":"faq/#6-how-to-individually-switch-the-way-apis-are-authenticated-for-access-in-amazon-api-gateway","text":"Follow the steps below: Access Amazon API Gateway console . Select the most recently created AI Solution Kit API in the API list, and open the API details page. You can sort by Created to facilitate the search. Expand the resource tree, find the OPTIONS node under the path of the resource you need to modify the access rights, and click it to display the method execution configuration page. Click the Method Request link under Method Execution. Choose the Edit button on the right side of the authorization, expand the drop-down list, and select Amazon IAM . Choose the Update button to complete the modification. After the update, the authorization item should be displayed as 'Amazon IAM'. 6. Choose the POST button under OPTIONS in the resource tree, and modify the method of OPTIONS, change the authorization method to Amazon IAM in the method request, and then choose the Update button. Choose the Actions drop-down button on the left side of the method execution, and click on the Deploy API option under API Actions. In the Deploy API dialog box, select prod or a custom name for the deployment phase (do not select [New Phase]), and then click the Deploy button below to complete the deployment.","title":"6. How to individually switch the way APIs are authenticated for access in Amazon API Gateway?"},{"location":"faq/#7-how-to-create-and-use-a-usage-plan-with-api-key","text":"This solution supports API Usage Plans. After deploying the solution and testing the APIs, you can implement API Gateway Usage Plans and offer them as a customer-facing product/service. You can configure usage plans and API keys to allow customers to access selected APIs at agreed request rates and quotas that meet their business needs and budget constraints. You can set default method level limits for APIs or set limits for individual API methods if desired. The API caller must provide an assigned API key in the x-api-key header of the API request. To configure an API usage plan , refer to Configure Usage Plan .","title":"7. How to create and use a usage plan with API key?"},{"location":"include-call-url/","text":"Calling URL You have two options to call URL of AI features: When deploying the solution, set the parameter APIGatewayAuthorization to NONE to allow anonymous access to API. When deploying the solution, set the parameter APIGatewayAuthorization to AWS_IAM to use the IAM permission to control access to API. For more information, see Invoking a REST API in Amazon API Gateway .","title":"Include call url"},{"location":"include-call-url/#calling-url","text":"You have two options to call URL of AI features: When deploying the solution, set the parameter APIGatewayAuthorization to NONE to allow anonymous access to API. When deploying the solution, set the parameter APIGatewayAuthorization to AWS_IAM to use the IAM permission to control access to API. For more information, see Invoking a REST API in Amazon API Gateway .","title":"Calling URL"},{"location":"include-deploy-code/","text":"API test You can use the following tools (API explorer, Postman, cURL, Python, Java) to test calling APIs. API Explorer Prerequisites When deploying the solution , you need to\uff1a set the parameter API Explorer to yes . set the parameter API Gateway Authorization to NONE . Otherwise, you can only view the API definitions in the API explorer, but cannot test calling API online. Steps Sign in to the AWS CloudFormation console . On the Stacks page, select the solution\u2019s root stack. Do not select the NESTED stack. Choose the Outputs tab, and find the URL for APIExplorer. Click the URL to access the API explorer. The APIs that you have selected during deployment will be displayed. For the API you want to test, click the down arrow to display the request method. Choose the Try it out button, and enter the correct Body data to test API and check the test result. Make sure the format is correct, and choose Execute . Check the returned result in JSON format in the Responses body . If needed, copy or download the result. Check the Response headers . (Optional) Choose Clear next to the Execute button to clear the request body and responses. Postman ( AWS_IAM Authentication\uff09 Sign in to the AWS CloudFormation console . On the Stacks page, select the solution\u2019s root stack. Choose the Outputs tab, and find the URL with the prefix GeneralOCR . Create a new tab in Postman. Paste the URL into the address bar, and select POST as the HTTP call method. Open the Authorization configuration, select Amazon Web Service Signature from the drop-down list, and enter the AccessKey, SecretKey and Amazon Web Service Region of the corresponding account (such as cn-north-1 or cn-northwest-1 ). Open the Body configuration item and select the raw and JSON data types. Enter the test data in the Body, and click the Send button to see the corresponding return results. { \"url\": \"{{ no such element: dict object['sample_image'] }}\" } cURL Windows curl --location --request POST \"https://[API_ID].execute-api.[AWS_REGION].amazonaws.com/[STAGE]/{{ no such element: dict object['feature_endpoint'] }}\" ^ --header \"Content-Type: application/json\" ^ --data-raw \"{\\\"url\\\": \\\"{{ no such element: dict object['sample_image'] }}\\\"}\" Linux/MacOS curl --location --request POST 'https://[API_ID].execute-api.[AWS_REGION].amazonaws.com/[STAGE]/{{ no such element: dict object['feature_endpoint'] }}' \\ --header 'Content-Type: application/json' \\ --data-raw '{ \"url\":\"{{ no such element: dict object['sample_image'] }}\" }' Python ( AWS_IAM Authentication) import requests import json from aws_requests_auth.boto_utils import BotoAWSRequestsAuth auth = BotoAWSRequestsAuth(aws_host='[API_ID].execute-api.[AWS_REGION].amazonaws.com', aws_region='[AWS_REGION]', aws_service='execute-api') url = 'https://[API_ID].execute-api.[AWS_REGION].amazonaws.com/[STAGE]/{{ no such element: dict object['feature_endpoint'] }}' payload = { 'url': '{{ no such element: dict object['sample_image'] }}' } response = requests.request(\"POST\", url, data=json.dumps(payload), auth=auth) print(json.loads(response.text)) Python ( NONE Authentication) import requests import json url = \"https://[API_ID].execute-api.[AWS_REGION].amazonaws.com/[STAGE]/{{ no such element: dict object['feature_endpoint'] }}\" payload = json.dumps({ \"url\": \"{{ no such element: dict object['sample_image'] }}\" }) headers = { 'Content-Type': 'application/json' } response = requests.request(\"POST\", url, headers=headers, data=payload) print(response.text) Java OkHttpClient client = new OkHttpClient().newBuilder() .build(); MediaType mediaType = MediaType.parse(\"application/json\"); RequestBody body = RequestBody.create(mediaType, \"{\\n \\\"url\\\":\\\"{{ no such element: dict object['sample_image'] }}\\\"\\n}\"); Request request = new Request.Builder() .url(\"https://xxxxxxxxxxx.execute-api.xxxxxxxxx.amazonaws.com/[STAGE]/{{ no such element: dict object['feature_endpoint'] }}\") .method(\"POST\", body) .addHeader(\"Content-Type\", \"application/json\") .build(); Response response = client.newCall(request).execute();","title":"Include deploy code"},{"location":"include-deploy-code/#api-test","text":"You can use the following tools (API explorer, Postman, cURL, Python, Java) to test calling APIs.","title":"API test"},{"location":"include-deploy-code/#api-explorer","text":"Prerequisites When deploying the solution , you need to\uff1a set the parameter API Explorer to yes . set the parameter API Gateway Authorization to NONE . Otherwise, you can only view the API definitions in the API explorer, but cannot test calling API online. Steps Sign in to the AWS CloudFormation console . On the Stacks page, select the solution\u2019s root stack. Do not select the NESTED stack. Choose the Outputs tab, and find the URL for APIExplorer. Click the URL to access the API explorer. The APIs that you have selected during deployment will be displayed. For the API you want to test, click the down arrow to display the request method. Choose the Try it out button, and enter the correct Body data to test API and check the test result. Make sure the format is correct, and choose Execute . Check the returned result in JSON format in the Responses body . If needed, copy or download the result. Check the Response headers . (Optional) Choose Clear next to the Execute button to clear the request body and responses.","title":"API Explorer"},{"location":"include-deploy-code/#postman-aws_iam-authentication","text":"Sign in to the AWS CloudFormation console . On the Stacks page, select the solution\u2019s root stack. Choose the Outputs tab, and find the URL with the prefix GeneralOCR . Create a new tab in Postman. Paste the URL into the address bar, and select POST as the HTTP call method. Open the Authorization configuration, select Amazon Web Service Signature from the drop-down list, and enter the AccessKey, SecretKey and Amazon Web Service Region of the corresponding account (such as cn-north-1 or cn-northwest-1 ). Open the Body configuration item and select the raw and JSON data types. Enter the test data in the Body, and click the Send button to see the corresponding return results. { \"url\": \"{{ no such element: dict object['sample_image'] }}\" }","title":"Postman (AWS_IAM Authentication\uff09"},{"location":"include-deploy-code/#curl","text":"Windows curl --location --request POST \"https://[API_ID].execute-api.[AWS_REGION].amazonaws.com/[STAGE]/{{ no such element: dict object['feature_endpoint'] }}\" ^ --header \"Content-Type: application/json\" ^ --data-raw \"{\\\"url\\\": \\\"{{ no such element: dict object['sample_image'] }}\\\"}\" Linux/MacOS curl --location --request POST 'https://[API_ID].execute-api.[AWS_REGION].amazonaws.com/[STAGE]/{{ no such element: dict object['feature_endpoint'] }}' \\ --header 'Content-Type: application/json' \\ --data-raw '{ \"url\":\"{{ no such element: dict object['sample_image'] }}\" }'","title":"cURL"},{"location":"include-deploy-code/#python-aws_iam-authentication","text":"import requests import json from aws_requests_auth.boto_utils import BotoAWSRequestsAuth auth = BotoAWSRequestsAuth(aws_host='[API_ID].execute-api.[AWS_REGION].amazonaws.com', aws_region='[AWS_REGION]', aws_service='execute-api') url = 'https://[API_ID].execute-api.[AWS_REGION].amazonaws.com/[STAGE]/{{ no such element: dict object['feature_endpoint'] }}' payload = { 'url': '{{ no such element: dict object['sample_image'] }}' } response = requests.request(\"POST\", url, data=json.dumps(payload), auth=auth) print(json.loads(response.text))","title":"Python (AWS_IAM Authentication)"},{"location":"include-deploy-code/#python-none-authentication","text":"import requests import json url = \"https://[API_ID].execute-api.[AWS_REGION].amazonaws.com/[STAGE]/{{ no such element: dict object['feature_endpoint'] }}\" payload = json.dumps({ \"url\": \"{{ no such element: dict object['sample_image'] }}\" }) headers = { 'Content-Type': 'application/json' } response = requests.request(\"POST\", url, headers=headers, data=payload) print(response.text)","title":"Python (NONE Authentication)"},{"location":"include-deploy-code/#java","text":"OkHttpClient client = new OkHttpClient().newBuilder() .build(); MediaType mediaType = MediaType.parse(\"application/json\"); RequestBody body = RequestBody.create(mediaType, \"{\\n \\\"url\\\":\\\"{{ no such element: dict object['sample_image'] }}\\\"\\n}\"); Request request = new Request.Builder() .url(\"https://xxxxxxxxxxx.execute-api.xxxxxxxxx.amazonaws.com/[STAGE]/{{ no such element: dict object['feature_endpoint'] }}\") .method(\"POST\", body) .addHeader(\"Content-Type\", \"application/json\") .build(); Response response = client.newCall(request).execute();","title":"Java"},{"location":"include-deploy-cost-10GB/","text":"Cost estimation You are responsible for the cost of using each Amazon Web Services service when running the solution. As of June 2022, the main cost factors affecting the solution include. AWS Lambda invocations AWS Lambda running time Amazon API Gateway calls Amazon API Gateway data output Amazon CloudWatch Logs storage Amazon Elastic Container Registry storage Cost estimation example 1 In AWS China (Ningxia) Region operated by NWCD (cn-northwest-1), process an image of 1MB in 1 seconds The cost of using this solution to process the image is shown below: Service Dimensions Cost AWS Lambda 1 million invocations \u00a51.36 AWS Lambda 10240MB memory, 1 seconds run each time \u00a51134.8 Amazon API Gateway 1 million invocations \u00a528.94 Amazon API Gateway 100KB data output each time, \u00a50.933/GB \u00a593.3 Amazon CloudWatch Logs 10KB each time, \u00a56.228/GB \u00a562.28 Amazon Elastic Container Registry 0.5GB storage, \u00a50.69/GB each month \u00a50.35 Total \u00a51237.06 Cost estimation example 2 In US East (Ohio) Region (us-east-2), process an image of 1MB in 4 seconds The cost of using this solution to process this image is shown below: Service Dimensions Cost AWS Lambda 1 million invocations $0.20 AWS Lambda 10240MB memory, 1 seconds run each time $166.7 Amazon API Gateway 1 million invocations $3.5 Amazon API Gateway 100KB data output each time, $0.09/GB $9 Amazon CloudWatch Logs 10KB each time, $0.50/GB $5 Amazon Elastic Container Registry 0.5GB\u5b58\u50a8\uff0c$0.1/GB each month $0.05 Total $176.35","title":"include deploy cost 10GB"},{"location":"include-deploy-cost-10GB/#cost-estimation","text":"You are responsible for the cost of using each Amazon Web Services service when running the solution. As of June 2022, the main cost factors affecting the solution include. AWS Lambda invocations AWS Lambda running time Amazon API Gateway calls Amazon API Gateway data output Amazon CloudWatch Logs storage Amazon Elastic Container Registry storage","title":"Cost estimation"},{"location":"include-deploy-cost-10GB/#cost-estimation-example-1","text":"In AWS China (Ningxia) Region operated by NWCD (cn-northwest-1), process an image of 1MB in 1 seconds The cost of using this solution to process the image is shown below: Service Dimensions Cost AWS Lambda 1 million invocations \u00a51.36 AWS Lambda 10240MB memory, 1 seconds run each time \u00a51134.8 Amazon API Gateway 1 million invocations \u00a528.94 Amazon API Gateway 100KB data output each time, \u00a50.933/GB \u00a593.3 Amazon CloudWatch Logs 10KB each time, \u00a56.228/GB \u00a562.28 Amazon Elastic Container Registry 0.5GB storage, \u00a50.69/GB each month \u00a50.35 Total \u00a51237.06","title":"Cost estimation example 1"},{"location":"include-deploy-cost-10GB/#cost-estimation-example-2","text":"In US East (Ohio) Region (us-east-2), process an image of 1MB in 4 seconds The cost of using this solution to process this image is shown below: Service Dimensions Cost AWS Lambda 1 million invocations $0.20 AWS Lambda 10240MB memory, 1 seconds run each time $166.7 Amazon API Gateway 1 million invocations $3.5 Amazon API Gateway 100KB data output each time, $0.09/GB $9 Amazon CloudWatch Logs 10KB each time, $0.50/GB $5 Amazon Elastic Container Registry 0.5GB\u5b58\u50a8\uff0c$0.1/GB each month $0.05 Total $176.35","title":"Cost estimation example 2"},{"location":"include-deploy-cost-8GB/","text":"Cost estimation You are responsible for the cost of using each Amazon Web Services service when running the solution. As of June 2022, the main cost factors affecting the solution include. AWS Lambda invocations AWS Lambda running time Amazon API Gateway calls Amazon API Gateway data output Amazon CloudWatch Logs storage Amazon Elastic Container Registry storage Cost estimation example 1 In AWS China (Ningxia) Region operated by NWCD (cn-northwest-1), process an image of 1MB in 1 seconds The cost of using this solution to process the image is shown below: Service Dimensions Cost AWS Lambda 1 million invocations \u00a51.36 AWS Lambda 8192MB memory, 1 seconds run each time \u00a5907.8 Amazon API Gateway 1 million invocations \u00a528.94 Amazon API Gateway 100KB data output each time, \u00a50.933/GB \u00a593.3 Amazon CloudWatch Logs 10KB each time, \u00a56.228/GB \u00a562.28 Amazon Elastic Container Registry 0.5GB storage, \u00a50.69/GB each month \u00a50.35 Total \u00a51010.06 Cost estimation example 2 In US East (Ohio) Region (us-east-2), process an image of 1MB in 1 seconds The cost of using this solution to process this image is shown below: Service Dimensions Cost AWS Lambda 1 million invocations $0.20 AWS Lambda 8192MB memory, 1 seconds run each time $133.3 Amazon API Gateway 1 million invocations $3.5 Amazon API Gateway 100KB data output each time, $0.09/GB $9 Amazon CloudWatch Logs 10KB each time, $0.50/GB $5 Amazon Elastic Container Registry 0.5GB\u5b58\u50a8\uff0c$0.1/GB each month $0.05 Total $142.95","title":"include deploy cost 8GB"},{"location":"include-deploy-cost-8GB/#cost-estimation","text":"You are responsible for the cost of using each Amazon Web Services service when running the solution. As of June 2022, the main cost factors affecting the solution include. AWS Lambda invocations AWS Lambda running time Amazon API Gateway calls Amazon API Gateway data output Amazon CloudWatch Logs storage Amazon Elastic Container Registry storage","title":"Cost estimation"},{"location":"include-deploy-cost-8GB/#cost-estimation-example-1","text":"In AWS China (Ningxia) Region operated by NWCD (cn-northwest-1), process an image of 1MB in 1 seconds The cost of using this solution to process the image is shown below: Service Dimensions Cost AWS Lambda 1 million invocations \u00a51.36 AWS Lambda 8192MB memory, 1 seconds run each time \u00a5907.8 Amazon API Gateway 1 million invocations \u00a528.94 Amazon API Gateway 100KB data output each time, \u00a50.933/GB \u00a593.3 Amazon CloudWatch Logs 10KB each time, \u00a56.228/GB \u00a562.28 Amazon Elastic Container Registry 0.5GB storage, \u00a50.69/GB each month \u00a50.35 Total \u00a51010.06","title":"Cost estimation example 1"},{"location":"include-deploy-cost-8GB/#cost-estimation-example-2","text":"In US East (Ohio) Region (us-east-2), process an image of 1MB in 1 seconds The cost of using this solution to process this image is shown below: Service Dimensions Cost AWS Lambda 1 million invocations $0.20 AWS Lambda 8192MB memory, 1 seconds run each time $133.3 Amazon API Gateway 1 million invocations $3.5 Amazon API Gateway 100KB data output each time, $0.09/GB $9 Amazon CloudWatch Logs 10KB each time, $0.50/GB $5 Amazon Elastic Container Registry 0.5GB\u5b58\u50a8\uff0c$0.1/GB each month $0.05 Total $142.95","title":"Cost estimation example 2"},{"location":"include-deploy-description/","text":"{{ no such element: dict object['feature_description'] }} Applicable scenarios {{ no such element: dict object['feature_scenario'] }}","title":"Include deploy description"},{"location":"include-deploy-description/#applicable-scenarios","text":"{{ no such element: dict object['feature_scenario'] }}","title":"Applicable scenarios"},{"location":"include-deploy-uninstall/","text":"Uninstall the deployment You can uninstall the {{ no such element: dict object['feature_name'] }} feature via Amazon CloudFormation as described in Add or remove AI features and make sure the {{ no such element: dict object['feature_id'] }} parameter is set to no in the parameters section. Note Time to uninstall the deployment is approximately: {{ no such element: dict object['destroy_time'] }}","title":"Include deploy uninstall"},{"location":"include-deploy-uninstall/#uninstall-the-deployment","text":"You can uninstall the {{ no such element: dict object['feature_name'] }} feature via Amazon CloudFormation as described in Add or remove AI features and make sure the {{ no such element: dict object['feature_id'] }} parameter is set to no in the parameters section. Note Time to uninstall the deployment is approximately: {{ no such element: dict object['destroy_time'] }}","title":"Uninstall the deployment"},{"location":"regions/","text":"Regional Deployment This solution uses services which may not be currently available in all AWS Regions. Launch this solution in an AWS Region where required services are available. For the most current availability by Region, refer to the AWS Regional Services List. Supported regions for deployment in AWS Global Regions Region Name Region ID US East (N. Virginia) Region us-east-1 US East (Ohio) Region us-east-2 US West (N. California) Region us-west-1 US West (Oregon) Region us-west-2 Asia Pacific (Mumbai) Region ap-south-1 Asia Pacific (Tokyo) Region ap-northeast-1 Asia Pacific (Seoul) Region ap-northeast-2 Asia Pacific (Singapore) Region ap-southeast-1 Asia Pacific (Sydney) Region ap-southeast-2 Canada (Central) Region ca-central-1 Europe (Ireland) Region eu-west-1 Europe (London) Region eu-west-2 Europe (Paris) Region eu-west-3 Europe (Frankfurt) Region eu-central-1 South America (Sao Paulo) Region sa-east-1 Supported regions for deployment in AWS China Regions Region Name Region ID AWS China (Beijing) Region operated by Sinnet cn-north-1 AWS China (Ningxia) Region operated by NWCD cn-northwest-1","title":"Design considerations"},{"location":"regions/#regional-deployment","text":"This solution uses services which may not be currently available in all AWS Regions. Launch this solution in an AWS Region where required services are available. For the most current availability by Region, refer to the AWS Regional Services List.","title":"Regional Deployment"},{"location":"regions/#supported-regions-for-deployment-in-aws-global-regions","text":"Region Name Region ID US East (N. Virginia) Region us-east-1 US East (Ohio) Region us-east-2 US West (N. California) Region us-west-1 US West (Oregon) Region us-west-2 Asia Pacific (Mumbai) Region ap-south-1 Asia Pacific (Tokyo) Region ap-northeast-1 Asia Pacific (Seoul) Region ap-northeast-2 Asia Pacific (Singapore) Region ap-southeast-1 Asia Pacific (Sydney) Region ap-southeast-2 Canada (Central) Region ca-central-1 Europe (Ireland) Region eu-west-1 Europe (London) Region eu-west-2 Europe (Paris) Region eu-west-3 Europe (Frankfurt) Region eu-central-1 South America (Sao Paulo) Region sa-east-1","title":"Supported regions for deployment in AWS Global Regions"},{"location":"regions/#supported-regions-for-deployment-in-aws-china-regions","text":"Region Name Region ID AWS China (Beijing) Region operated by Sinnet cn-north-1 AWS China (Ningxia) Region operated by NWCD cn-northwest-1","title":"Supported regions for deployment in AWS China Regions"},{"location":"revisions/","text":"Date Description September 2021 Release 1.0.0 Support the following AI features: General OCR Image Super Resolution Pornography Detection Human Image Segmentation June 2022 Release 1.2.0 Updated the following AI features: Optimized General OCR General OCR (Traditional Chinese) Custom OCR Image Similarity Object Recognition Face Detection Face Comparison Human Attribute Recognition Car License Plate Text Similarity Updated the solution architecture: Support OpenAPI specification and integrate API Explorer AI model containerization Upgrade CDK to 2.27.0 Support CloudFormation deployment","title":"Release Notes"},{"location":"security/","text":"Security Information When you build solutions on Amazon Web Services, security responsibilities are shared between you and Amazon Cloud. This Shared Responsibility Model reduces your operational burden due to the Amazon Web Services operations, management, and control components, including host operations The physical security of the system, the virtualization layer, and the facility where the service runs. For more information on Amazon Web Services, visit Amazon Web Services Cloud Security . IAM roles AWS Identity and Access Management (IAM) roles allow customers to assign fine-grained access policies and permissions to services and users on AWS. This solution creates IAM roles that grant access between components of the solution.","title":"Security"},{"location":"security/#security-information","text":"When you build solutions on Amazon Web Services, security responsibilities are shared between you and Amazon Cloud. This Shared Responsibility Model reduces your operational burden due to the Amazon Web Services operations, management, and control components, including host operations The physical security of the system, the virtualization layer, and the facility where the service runs. For more information on Amazon Web Services, visit Amazon Web Services Cloud Security .","title":"Security Information"},{"location":"security/#iam-roles","text":"AWS Identity and Access Management (IAM) roles allow customers to assign fine-grained access policies and permissions to services and users on AWS. This solution creates IAM roles that grant access between components of the solution.","title":"IAM roles"},{"location":"source/","text":"Visit our GitHub repository to download the source code of this solution. The template of the AI Solution Kit is generated by AWS CloudFormation . For more information, refer to the README.md file.","title":"Source code"},{"location":"template/","text":"Before deploying the solution, you can download the following AWS CloudFormation template used by the solution. For more information, see CloudFormation concepts . AI-Solution-Kit.template : You can use this template to launch the solution and related services. You can also customize the template according to your needs.","title":"CloudFormation template"},{"location":"uninstall/","text":"To uninstall AI Solution Kit, you must delete the AWS CloudFormation stack. You can use either the AWS Management Console or the AWS Command Line Interface (CLI) to delete the CloudFormation stack. Using the AWS Management Console Sign in to the AWS CloudFormation console. Select this solution\u2019s installation stack. Choose Delete . Using AWS Command Line Interface Determine whether the AWS CLI is available in your environment. For installation instructions, see What Is the AWS Command Line Interface in the AWS CLI User Guide . After confirming that the AWS CLI is available, run the following command. $ aws cloudformation delete-stack --stack-name <installation-stack-name>","title":"Uninstall the solution"},{"location":"uninstall/#using-the-aws-management-console","text":"Sign in to the AWS CloudFormation console. Select this solution\u2019s installation stack. Choose Delete .","title":"Using the AWS Management Console"},{"location":"uninstall/#using-aws-command-line-interface","text":"Determine whether the AWS CLI is available in your environment. For installation instructions, see What Is the AWS Command Line Interface in the AWS CLI User Guide . After confirming that the AWS CLI is available, run the following command. $ aws cloudformation delete-stack --stack-name <installation-stack-name>","title":"Using AWS Command Line Interface"},{"location":"upgrade/","text":"Upgrade scenario 1 When you have deployed and are using some of the API features from release 1.0.0, you can continue to use the original APIs that have been deployed in your AWS account while deploying the features provided in the new APIs available in release 1.2.0. The interface definition parameters of the four APIs (General OCR, Image Super Resolution, Human Image Segmentation, Pornography Detection) in the release 1.0.0 are identical to the same four features in release 1.2.0, and you only need to replace the original URLs to use them. Upgrade scenario 2 If you want to switch the original API invoke URL to the new version, you can perform the following operations after deploying the new version: Sign in to the AWS CloudFormation console . On the Stacks page, select the solution\u2019s root stack. Choose the Outputs tab, and find the invoke URL. Replace the old invoke URL in the code. After the replacement, you can completely remove the original stack in the AWS CloudFormation console to avoid incurring extra cost, which takes about 10 minutes.","title":"Upgrade the solution"},{"location":"upgrade/#upgrade-scenario-1","text":"When you have deployed and are using some of the API features from release 1.0.0, you can continue to use the original APIs that have been deployed in your AWS account while deploying the features provided in the new APIs available in release 1.2.0. The interface definition parameters of the four APIs (General OCR, Image Super Resolution, Human Image Segmentation, Pornography Detection) in the release 1.0.0 are identical to the same four features in release 1.2.0, and you only need to replace the original URLs to use them.","title":"Upgrade scenario 1"},{"location":"upgrade/#upgrade-scenario-2","text":"If you want to switch the original API invoke URL to the new version, you can perform the following operations after deploying the new version: Sign in to the AWS CloudFormation console . On the Stacks page, select the solution\u2019s root stack. Choose the Outputs tab, and find the invoke URL. Replace the old invoke URL in the code. After the replacement, you can completely remove the original stack in the AWS CloudFormation console to avoid incurring extra cost, which takes about 10 minutes.","title":"Upgrade scenario 2"}]}