FROM nvidia/cuda:11.3.1-cudnn8-runtime-ubuntu20.04

RUN apt update \
    && apt install -y --no-install-recommends wget python3 python3-pip \
    && ln -sf python3 /usr/bin/python \
    && ln -sf pip3 /usr/bin/pip \
    && pip install --upgrade pip \
    && pip install wheel setuptools

ARG FUNCTION_DIR="/opt/ml/model"
# Lite version
ARG MODEL_URL="https://aws-gcr-solutions-assets.s3.cn-northwest-1.amazonaws.com.cn/ai-solution-kit/infer-ocr-model/advanced"
ARG MODEL_VERSION="v1.4.0"

RUN pip3 install flask gevent
RUN pip3 uninstall onnxruntime -y && pip3 install onnxruntime-gpu
ADD / ${FUNCTION_DIR}/

RUN pip3 install -r ${FUNCTION_DIR}/requirements.txt

RUN mkdir -p ${FUNCTION_DIR}/model
RUN wget -c $MODEL_URL/$MODEL_VERSION/classifier.onnx -O ${FUNCTION_DIR}/model/classifier.onnx
RUN wget -c $MODEL_URL/$MODEL_VERSION/det_standard.onnx -O ${FUNCTION_DIR}/model/det_advanced.onnx
RUN wget -c $MODEL_URL/$MODEL_VERSION/keys_v1.txt -O ${FUNCTION_DIR}/model/keys_en_chs_cht_vi_ja_ko.txt
RUN wget -c $MODEL_URL/$MODEL_VERSION/rec_standard.onnx -O ${FUNCTION_DIR}/model/rec_advanced.onnx

WORKDIR ${FUNCTION_DIR}
ENV PYTHONUNBUFFERED=TRUE
ENV PYTHONDONTWRITEBYTECODE=TRUE
ENV PYTHONIOENCODING="utf8"
ENV MODEL_NAME="standard"
ENV MODEL_PATH="${FUNCTION_DIR}/model/"
#ENV LD_LIBRARY_PATH /usr/local/cuda/compat:$LD_LIBRARY_PATH

ENTRYPOINT ["python", "sm_predictor.py"]